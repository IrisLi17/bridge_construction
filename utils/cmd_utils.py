import argparse


def parse_cmd():
    parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument("--env_id", type=str)
    parser.add_argument("--policy", type=str, default="discrete_mlp")
    parser.add_argument("--seed", type=int, default=0)
    parser.add_argument("--algo", type=str)
    parser.add_argument("--log_path", type=str, default=None)
    parser.add_argument("--load_path", type=str, default=None)
    parser.add_argument("--num_timesteps", type=float, default=1e6)
    parser.add_argument("--num_workers", type=int, default=1)
    parser.add_argument("--play", action="store_true", default=False)
    parser.add_argument("--n_steps", type=int, default=1024)
    parser.add_argument("--nminibatches", type=int, default=32)
    parser.add_argument("--nvfminibatches", type=int, default=32)
    parser.add_argument("--noptepochs", type=int, default=10)  # In PPO, epochs of joint training; In PPG, epochs of phase1
    parser.add_argument("--nauxepochs", type=int, default=10)
    parser.add_argument("--aux_freq", type=int, default=1)
    parser.add_argument("--bc_coef", type=float, default=2)
    parser.add_argument("--max_grad_norm", type=float, default=0.5)
    parser.add_argument("--cliprange", type=str, default="0.2")
    parser.add_argument("--ent_coef", type=float, default=0.01)
    parser.add_argument("--learning_rate", default="2.5e-4")
    parser.add_argument("--gamma", type=float, default=0.99)
    parser.add_argument("--lam", type=float, default=0.95)
    parser.add_argument("--recompute_adv", action="store_true", default=False)
    parser.add_argument("--done_when_success", action="store_true", default=False)
    parser.add_argument("--horizon", type=int, default=30)
    parser.add_argument("--cons_coef", type=float, default=0.0)
    parser.add_argument("--stable_reward_coef", type=float, default=0.0)
    parser.add_argument("--rotation_penalty_coef", type=float, default=1.0)
    parser.add_argument("--rotation_low", type=float, default=0)  # theta / pi
    parser.add_argument("--rotation_high", type=float, default=0.5)
    parser.add_argument("--height_coef", type=float, default=0.0)
    parser.add_argument("--smooth_coef", type=float, default=0.0)
    parser.add_argument("--smooth_max", type=float, default=0.2)
    parser.add_argument("--cost_coef", type=float, default=0.0)
    parser.add_argument("--reward_scale", type=float, default=0.05)
    parser.add_argument("--reward_type", type=str, default="incremental")
    parser.add_argument("--bonus_weight", type=float, default=0.1)
    parser.add_argument("--no_adaptive_number", action="store_false", default=True)
    parser.add_argument("--cl_type", type=str, default="adapt_hard")
    parser.add_argument("--random_size", action="store_true", default=False)
    parser.add_argument("--discrete_height", action="store_true", default=False)
    parser.add_argument("--observe_skyline", action="store_true", default=False)
    parser.add_argument("--skyline_dim", type=int, default=38)
    parser.add_argument("--exclude_time", action="store_false", default=True)
    parser.add_argument("--min_num_blocks", type=int, default=3)
    parser.add_argument("--hidden_size", type=int, default=64)
    parser.add_argument("--n_heads", type=int, default=1)
    parser.add_argument("--n_attention_blocks", type=int, default=3)
    parser.add_argument("--policy_arch", type=str, default="shared")
    parser.add_argument("--ewma_decay", type=float, default=None)
    parser.add_argument("--exp_update", action="store_true", default=False)
    parser.add_argument("--kl_beta", type=float, default=0)
    parser.add_argument("--num_bin", type=str, default="20")
    parser.add_argument("--auxiliary_task", type=str, default=None, choices=[
        None, "skyline", "next_skyline", "next_state", "inverse_dynamics"])
    parser.add_argument("--auxiliary_coef", type=float, default=0.)
    parser.add_argument("--random_mode", type=str, default="long", choices=["split", "long"])
    parser.add_argument("--action_scale", type=float, default=0.6)
    parser.add_argument("--center_y", action="store_true", default=False)
    parser.add_argument("--no_cl", action="store_true", default=False)
    parser.add_argument("--inf_horizon", action="store_true", default=False)
    parser.add_argument("--restart_rate", type=float, default=0.)
    parser.add_argument("--priority_type", type=str, choices=[
        None, "diff", "value", "pos_diff", "td", "v_std", "uniform", "task_grad", "td_step_to_go", "aux_error"], default=None)
    parser.add_argument("--noop", action="store_true", default=False)
    parser.add_argument("--v_ensemble", type=int, default=1)
    parser.add_argument("--optimizer", choices=["adam"], default="adam")
    parser.add_argument("--manual_filter_state", action="store_true", default=False)
    parser.add_argument("--state_replay_size", type=int, default=100_000)
    parser.add_argument("--filter_priority", type=float, default=0)
    parser.add_argument("--refined_action", action="store_true", default=False)
    parser.add_argument("--bilevel_action", action="store_true", default=False)
    parser.add_argument("--priority_decay", type=float, default=0.0)
    parser.add_argument("--clip_priority", action="store_true", default=False)
    parser.add_argument("--primitive", action="store_true", default=False)
    parser.add_argument("--robot", choices=["ur", "xarm"], default="xarm")
    parser.add_argument("--friction_low", type=float, default=0.25)
    parser.add_argument("--friction_high", type=float, default=0.5)
    parser.add_argument("--force_scale", type=float, default=0, help="random force applied after releasing finger")
    parser.add_argument("--adaptive_primitive", action="store_true", default=False)
    args = parser.parse_args()
    return args
